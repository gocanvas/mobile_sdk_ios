// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target x86_64-apple-ios16.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name GCSdk
import Foundation
import Swift
import UIKit.UIInterface
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct CanvasSdkMessagingAction {
  public let actionTitle: Swift.String
  public let actionHandler: () -> Swift.Void
}
public protocol CanvasSdkMessagingDelegate {
  func showResumeMessage(withTitle: Swift.String, body: Swift.String, discardAction: GCSdk.CanvasSdkMessagingAction, continueAction: GCSdk.CanvasSdkMessagingAction, userInterfaceStyle: UIKit.UIUserInterfaceStyle)
}
public struct GCSdkConfig {
  public init(licenseKey: Swift.String)
}
public class GoCanvasFormLauncher {
  public init(config: GCSdk.GCSdkConfig)
  public func addConfigValue(key: Swift.String, value: Any)
  @_Concurrency.MainActor public func formFlowController(config: GCSdk.GCSdkFormConfig, messagingDelegate: any GCSdk.CanvasSdkMessagingDelegate, completion: @escaping (Swift.String) -> ()) async throws -> UIKit.UIViewController
  @objc deinit
}
public enum SDKLicenseError : Swift.Error {
  case invalidLicenseKey(description: Swift.String)
  case invalidBundleId(description: Swift.String)
  case unknown(error: Foundation.NSError)
  public var message: Swift.String {
    get
  }
}
public enum FormLauncherError : Swift.Error {
  case invalidJson(userInfo: [Swift.String : Any], description: Swift.String)
  case missingData(description: Swift.String)
  case resumeFormFailed(description: Swift.String)
  case missingCameraConfiguration(description: Swift.String)
  case referenceDataError(description: Swift.String)
  case formRetiredError(description: Swift.String)
  case unknown(error: Foundation.NSError)
  public var message: Swift.String {
    get
  }
}
public struct GCSdkFormConfig {
  public init(jsonInput: Swift.String, referenceDataJson: Swift.String? = nil, prefilledDataJson: Swift.String? = nil)
}
public protocol CanvasSdkFirebaseDelegate {
  func sdkRecordError(_ title: Swift.String, message: Swift.String, function: Swift.String)
  func sdkSetVariables(_ variables: [Swift.String : Swift.String])
  func sdkLogEvent(_ eventName: Swift.String, parameters: [Swift.String : Any])
  func sdkLogSignUp(with parameters: [Swift.String : Any]?)
  func sdkInitializeRemoteConfig()
  func sdkSetUserProperties()
  func sdkRemoteConfigStringValue(forKey: Swift.String) -> Swift.String?
  func sdkRemoteConfigBoolValue(forKey: Swift.String) -> Swift.Bool
  func sdkGetToken() -> Swift.String?
}
public class GoCanvasFirebase {
  public init()
  public func setDelegate(_ delegate: (any GCSdk.CanvasSdkFirebaseDelegate)?)
  @objc deinit
}
